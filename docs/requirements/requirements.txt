#=================================#
#===== FRONTEND REQUIREMENTS =====#
#=================================#

We’re going to build a site where we collect books we’ve read or want to read. As a user, you can explore which books are available, mark books as read, currently reading, or want to read, and rate them.

The backend team has had a head start, so the backend is already deployed — now only the frontend is missing.

What must be included is a page where you can see all books and choose sorting (most read, most wanted to read, highest rating, and name). There should be a page for viewing a specific book where you can see its info. On the book page, if you’re logged in, you should be able to mark the book as read, currently reading, or want to read, and rate it. There must also be a login page.

After that, you can add one or more of the following:
• A “My books” page where you can see which books you’ve read, want to read, or have reviewed.
  This page is only available if you’re logged in.
• A sign-up page
• Tests at some level
• Search functionality — search by name with a genre filter



#================================#
#===== BACKEND REQUIREMENTS =====#
#================================#

You are to build an API for a bookstore. It should be possible to list the books available and purchase them if they are in stock. Then, add functionality as time allows. There are some suggestions below, but if you come up with features that fit the domain and showcase particular expertise, that’s excellent!

The task is intentionally loosely defined in order to give an idea of how you approach such a problem. Think of it as building a product that can be further developed to expand its functionality and eventually be released.

Suggested functionality:
● Database connection (instead of mocking)
● Tests
● Filtering
● Validation
● Relationships
● Authenticated admin endpoint
● Storage of cover images
